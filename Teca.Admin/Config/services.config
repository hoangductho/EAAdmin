<configuration>
  <properties>
    <smtpHost>localhost</smtpHost>
    <!-- required-->
    <smtpPort></smtpPort>
    <smtpUsername></smtpUsername>
    <smtpPassword></smtpPassword>
    <emailEncoding></emailEncoding>
    <!-- iso-8859-1, utf-8, us-ascii, etc.  -->
    <tempDir></tempDir>
  </properties>
  <components>

    <!-- Email Service-->
    <!--<component
      id="FX.Utils.emailservice"
      service="FX.Utils.EmailService.IEmailService, FX.Utils"
      type="EInvoice.Core.SendEmailDBService, EInvoice.Core">
      <parameters>
        <TemplateDir>EmailTemplates</TemplateDir>
      </parameters>
    </component>-->

    <component
      id="FX.Utils.emailservice"
      service="FX.Utils.EmailService.IEmailService, FX.Utils"
      type="FX.Utils.EmailService.DefaultEmailService, FX.Utils">
      <parameters>
        <TemplateDir>EmailTemplates</TemplateDir>
      </parameters>
    </component>

    <component
			id="FX.Utils.emailsender"
			service="FX.Utils.EmailService.IEmailSender, FX.Utils"
			type="FX.Utils.EmailService.SmtpNet2EmailSender, FX.Utils">
      <!--<parameters>
        <host>smtp.gmail.com</host>
        <port>587</port>
        <EnableSsl>true</EnableSsl>
        <smtpUsername>d12congiap@gmail.com</smtpUsername>
        <smtpPassword>1521982</smtpPassword>
        <emailEncoding>UTF-8</emailEncoding>
        -->
      <!-- optional properties
				<emailEncoding>#{emailEncoding}</emailEncoding>
				-->
      <!--
      </parameters>-->
      <parameters>
        <host>210.86.231.106</host>
        <port>25</port>
        <EnableSsl>true</EnableSsl>
        <smtpUsername>do.tien.dat@vietsoftware.com</smtpUsername>
        <smtpPassword>Dat@098765</smtpPassword>
        <emailEncoding>UTF-8</emailEncoding>
      </parameters>
    </component>
    <!--   <component
			id="FX.Utils.emailtemplateengine"
			service="FX.Utils.EmailService.IEmailTemplateEngine, FX.Utils"
			type="FX.Utils.EmailService.SimpleEmailTemplateEngine, FX.Utils">
    </component> -->

    <!--IdentityManagement-->
    <component
      id="IRBACMembershipProvider"
      service="IdentityManagement.WebProviders.IRBACMembershipProvider, IdentityManagement"
      type="IdentityManagement.WebProviders.RBACMembershipProvider, IdentityManagement">
      <parameters>
        <mSessionFactoryConfigPath>Config\NHibernateConfig.xml</mSessionFactoryConfigPath>
        <mApplicationName>TECAPRO</mApplicationName>
      </parameters>
    </component>

    <component
      id="FanxiAuthentication"
      service="IdentityManagement.Authorization.FanxiAuthenticationBase, IdentityManagement"
      type="IdentityManagement.Authorization.FanxiAuthentication, IdentityManagement">
      <parameters>
        <mSessionFactoryConfigPath>Config\NHibernateConfig.xml</mSessionFactoryConfigPath>
        <mApplicationName>TECAPRO</mApplicationName>
      </parameters>
    </component>

    <component
      id="RBACRoleProvider"
      service="IdentityManagement.WebProviders.IRBACRoleProvider, IdentityManagement"
      type="IdentityManagement.WebProviders.RBACRoleProvider, IdentityManagement">
      <parameters>
        <mSessionFactoryConfigPath>Config\NHibernateConfig.xml</mSessionFactoryConfigPath>
        <mApplicationName>TECAPRO</mApplicationName>
      </parameters>
    </component>

    <component
      id="IroleService"
      service="IdentityManagement.Service.IroleService, IdentityManagement"
      type="IdentityManagement.ImplementService.roleService, IdentityManagement">
      <parameters>
        <sessionFactoryConfigPath>Config\NHibernateConfig.xml</sessionFactoryConfigPath>
      </parameters>
    </component>

    <component
      id="IApplicationsService"
      service="IdentityManagement.Service.IApplicationsService, IdentityManagement"
      type="IdentityManagement.ImplementService.ApplicationsService, IdentityManagement">
      <parameters>
        <sessionFactoryConfigPath>Config\NHibernateConfig.xml</sessionFactoryConfigPath>
      </parameters>
    </component>

    <component
      id="IuserService"
      service="IdentityManagement.Service.IuserService, IdentityManagement"
      type="IdentityManagement.ImplementService.userService, IdentityManagement">
      <parameters>
        <sessionFactoryConfigPath>Config\NHibernateConfig.xml</sessionFactoryConfigPath>
      </parameters>
    </component>

    <component
      id="IoperationService"
      service="IdentityManagement.Service.IoperationService, IdentityManagement"
      type="IdentityManagement.ImplementService.operationService, IdentityManagement">
      <parameters>
        <sessionFactoryConfigPath>Config\NHibernateConfig.xml</sessionFactoryConfigPath>
      </parameters>
    </component>

    <component
      id="IpermissionService"
      service="IdentityManagement.Service.IpermissionService, IdentityManagement"
      type="IdentityManagement.ImplementService.permissionService, IdentityManagement">
      <parameters>
        <sessionFactoryConfigPath>Config\NHibernateConfig.xml</sessionFactoryConfigPath>
      </parameters>
    </component>

    <component
      id="IobjectService"
      service="IdentityManagement.Service.IobjectService, IdentityManagement"
      type="IdentityManagement.ImplementService.objectService, IdentityManagement">
      <parameters>
        <sessionFactoryConfigPath>Config\NHibernateConfig.xml</sessionFactoryConfigPath>
      </parameters>
    </component>

    <component
      id="IArticlesService"
      service="Teca.Core.IService.IArticlesService, Teca.Core"
      type="Teca.Core.ServiceImpl.ArticlesService, Teca.Core">
      <parameters>
        <sessionFactoryConfigPath>Config\NHibernateConfig.xml</sessionFactoryConfigPath>
      </parameters>
    </component>

    <component
      id="IBannersService"
      service="Teca.Core.IService.IBannersService, Teca.Core"
      type="Teca.Core.ServiceImpl.BannersService, Teca.Core">
      <parameters>
        <sessionFactoryConfigPath>Config\NHibernateConfig.xml</sessionFactoryConfigPath>
      </parameters>
    </component>

    <component
      id="ICategoryService"
      service="Teca.Core.IService.ICategoryService, Teca.Core"
      type="Teca.Core.ServiceImpl.CategoryService, Teca.Core">
      <parameters>
        <sessionFactoryConfigPath>Config\NHibernateConfig.xml</sessionFactoryConfigPath>
      </parameters>
    </component>

    <component
      id="IContactService"
      service="Teca.Core.IService.IContactService, Teca.Core"
      type="Teca.Core.ServiceImpl.ContactService, Teca.Core">
      <parameters>
        <sessionFactoryConfigPath>Config\NHibernateConfig.xml</sessionFactoryConfigPath>
      </parameters>
    </component>

    <component
      id="IGalleryService"
      service="Teca.Core.IService.IGalleryService, Teca.Core"
      type="Teca.Core.ServiceImpl.GalleryService, Teca.Core">
      <parameters>
        <sessionFactoryConfigPath>Config\NHibernateConfig.xml</sessionFactoryConfigPath>
      </parameters>
    </component>

    <component
      id="IGalleryTypeService"
      service="Teca.Core.IService.IGalleryTypeService, Teca.Core"
      type="Teca.Core.ServiceImpl.GalleryTypeService, Teca.Core">
      <parameters>
        <sessionFactoryConfigPath>Config\NHibernateConfig.xml</sessionFactoryConfigPath>
      </parameters>
    </component>

    <component
      id="IMenuService"
      service="Teca.Core.IService.IMenuService, Teca.Core"
      type="Teca.Core.ServiceImpl.MenuService, Teca.Core">
      <parameters>
        <sessionFactoryConfigPath>Config\NHibernateConfig.xml</sessionFactoryConfigPath>
      </parameters>
    </component>

    <component
      id="INotificationService"
      service="Teca.Core.IService.INotificationService, Teca.Core"
      type="Teca.Core.ServiceImpl.NotificationService, Teca.Core">
      <parameters>
        <sessionFactoryConfigPath>Config\NHibernateConfig.xml</sessionFactoryConfigPath>
      </parameters>
    </component>


    <component
       id="IVideoTypeService"
       service="Teca.Core.IService.IVideoTypeService, Teca.Core"
       type="Teca.Core.ServiceImpl.VideoTypeService, Teca.Core">
      <parameters>
        <sessionFactoryConfigPath>Config\NHibernateConfig.xml</sessionFactoryConfigPath>
      </parameters>
    </component>

    <component id="IVideosService"
      service="Teca.Core.IService.IVideosService, Teca.Core"
      type="Teca.Core.ServiceImpl.VideosService, Teca.Core">
      <parameters>
        <sessionFactoryConfigPath>Config\NHibernateConfig.xml</sessionFactoryConfigPath>
      </parameters>
    </component>

    <component id="IDocumentService"
      service="Teca.Core.IService.IDocumentService, Teca.Core"
      type="Teca.Core.ServiceImpl.DocumentService, Teca.Core">
      <parameters>
        <sessionFactoryConfigPath>Config\NHibernateConfig.xml</sessionFactoryConfigPath>
      </parameters>
    </component>
    
    <component id="ILogSystemService"
      service="Teca.Core.IService.ILogSystemService, Teca.Core"
      type="Teca.Core.ServiceImpl.LogSystemService, Teca.Core">
      <parameters>
        <sessionFactoryConfigPath>Config\NHibernateConfig.xml</sessionFactoryConfigPath>
      </parameters>
    </component> 
    
    <component id="IIntroductionService"
      service="Teca.Core.IService.IIntroductionService, Teca.Core"
      type="Teca.Core.ServiceImpl.IntroductionService, Teca.Core">
      <parameters>
        <sessionFactoryConfigPath>Config\NHibernateConfig.xml</sessionFactoryConfigPath>
      </parameters>
    </component>

    <component id="ILogSystemService"
      service="Teca.Core.IService.ILogSystemService, Teca.Core"
      type="Teca.Core.ServiceImpl.LogSystemService, Teca.Core">
      <parameters>
        <sessionFactoryConfigPath>Config\NHibernateConfig.xml</sessionFactoryConfigPath>
      </parameters>
    </component>
  </components>

</configuration>
